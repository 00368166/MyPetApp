{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Layout, Button, Text, Section, TextInput, SectionContent, useTheme } from \"react-native-rapi-ui\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  var _useState = useState('AboutReact'),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  return _jsx(Layout, {\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(Section, {\n        style: {\n          marginTop: 20\n        },\n        children: _jsxs(SectionContent, {\n          children: [_jsx(Text, {\n            fontWeight: \"bold\",\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"These UI components provided by Rapi UI\"\n          }), _jsx(TextInput, {\n            value: userName,\n            onChangeText: function onChangeText(username) {\n              return setUserName(username);\n            },\n            placeholder: 'Enter Any value'\n          }), _jsx(Button, {\n            style: {\n              marginTop: 10\n            },\n            text: \"Rapi UI Documentation\",\n            status: \"info\",\n            onPress: function onPress() {\n              return Linking.openURL(\"https://rapi-ui.kikiding.space/\");\n            }\n          }), _jsx(Button, {\n            text: \"Go to second screen\",\n            onPress: function onPress() {\n              return navigation.navigate('SecondScreen', {\n                paramKey: userName\n              });\n            },\n            style: {\n              marginTop: 10\n            }\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","Layout","Button","Text","Section","TextInput","SectionContent","useTheme","navigation","isDarkmode","setTheme","userName","setUserName","flex","alignItems","justifyContent","marginTop","textAlign","username","Linking","openURL","navigate","paramKey"],"sources":["D:/anahuac/verano/mobile/myapp/MyPet/MyPetApp/src/screens/About.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { View, Linking } from \"react-native\";\nimport { MainStackParamList } from \"../types/navigation\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport {\n  Layout,\n  Button,\n  Text,\n  TopNav,\n  Section,\n  TextInput,\n  SectionContent,\n  useTheme,\n  themeColor,\n} from \"react-native-rapi-ui\";\n\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport default function ({\n  navigation,\n}: NativeStackScreenProps<MainStackParamList, \"MainTabs\">) {\n  const { isDarkmode, setTheme } = useTheme();\n  \n  const [userName, setUserName] = useState('AboutReact');\n  return (\n    <Layout>\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Section style={{ marginTop: 20 }}>\n          <SectionContent>\n            <Text fontWeight=\"bold\" style={{ textAlign: \"center\" }}>\n              These UI components provided by Rapi UI\n            </Text>\n            <TextInput\n          value={userName}\n          onChangeText={(username) => setUserName(username)}\n          placeholder={'Enter Any value'}\n        />\n            <Button\n              style={{ marginTop: 10 }}\n              text=\"Rapi UI Documentation\"\n              status=\"info\"\n              onPress={() => Linking.openURL(\"https://rapi-ui.kikiding.space/\")}\n            />\n            <Button\n              text=\"Go to second screen\"\n              onPress={() =>\n                navigation.navigate('SecondScreen', {\n                  paramKey: userName,\n                })\n              }\n              style={{\n                marginTop: 10,\n              }}\n            />\n          </SectionContent>\n        </Section>\n      </View>\n    </Layout>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAIA,SACEC,MADF,EAEEC,MAFF,EAGEC,IAHF,EAKEC,OALF,EAMEC,SANF,EAOEC,cAPF,EAQEC,QARF,QAUO,sBAVP;;;AAcA,eAAe,gBAE4C;EAAA,IADzDC,UACyD,QADzDA,UACyD;;EACzD,gBAAiCD,QAAQ,EAAzC;EAAA,IAAQE,UAAR,aAAQA,UAAR;EAAA,IAAoBC,QAApB,aAAoBA,QAApB;;EAEA,gBAAgCV,QAAQ,CAAC,YAAD,CAAxC;EAAA;EAAA,IAAOW,QAAP;EAAA,IAAiBC,WAAjB;;EACA,OACE,KAAC,MAAD;IAAA,UACE,KAAC,IAAD;MACE,KAAK,EAAE;QACLC,IAAI,EAAE,CADD;QAELC,UAAU,EAAE,QAFP;QAGLC,cAAc,EAAE;MAHX,CADT;MAAA,UAOE,KAAC,OAAD;QAAS,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAb,CAAhB;QAAA,UACE,MAAC,cAAD;UAAA,WACE,KAAC,IAAD;YAAM,UAAU,EAAC,MAAjB;YAAwB,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAb,CAA/B;YAAA;UAAA,EADF,EAIE,KAAC,SAAD;YACF,KAAK,EAAEN,QADL;YAEF,YAAY,EAAE,sBAACO,QAAD;cAAA,OAAcN,WAAW,CAACM,QAAD,CAAzB;YAAA,CAFZ;YAGF,WAAW,EAAE;UAHX,EAJF,EASE,KAAC,MAAD;YACE,KAAK,EAAE;cAAEF,SAAS,EAAE;YAAb,CADT;YAEE,IAAI,EAAC,uBAFP;YAGE,MAAM,EAAC,MAHT;YAIE,OAAO,EAAE;cAAA,OAAMG,OAAO,CAACC,OAAR,CAAgB,iCAAhB,CAAN;YAAA;UAJX,EATF,EAeE,KAAC,MAAD;YACE,IAAI,EAAC,qBADP;YAEE,OAAO,EAAE;cAAA,OACPZ,UAAU,CAACa,QAAX,CAAoB,cAApB,EAAoC;gBAClCC,QAAQ,EAAEX;cADwB,CAApC,CADO;YAAA,CAFX;YAOE,KAAK,EAAE;cACLK,SAAS,EAAE;YADN;UAPT,EAfF;QAAA;MADF;IAPF;EADF,EADF;AAyCD"},"metadata":{},"sourceType":"module"}