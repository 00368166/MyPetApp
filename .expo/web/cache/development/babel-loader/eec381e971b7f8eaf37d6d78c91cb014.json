{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Layout, TopNav, Text, themeColor, useTheme, Section, Button } from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function (_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  return _jsxs(Layout, {\n    children: [_jsx(TopNav, {\n      middleContent: route.params.paramKey.nombre,\n      leftContent: _jsx(Ionicons, {\n        name: \"chevron-back\",\n        size: 20,\n        color: isDarkmode ? themeColor.white100 : themeColor.dark\n      }),\n      leftAction: function leftAction() {\n        return navigation.goBack();\n      }\n    }), _jsx(View, {}), _jsx(Section, {}), _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [_jsxs(Text, {\n        fontWeight: \"bold\",\n        children: [\": \", route.params.paramKey.nombre]\n      }), _jsx(Button, {\n        status: \"danger\",\n        text: \"Logout\",\n        onPress: function _callee() {\n          var _await$supabase$auth$, error;\n\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _regeneratorRuntime.awrap(supabase.auth.signOut());\n\n                case 2:\n                  _await$supabase$auth$ = _context.sent;\n                  error = _await$supabase$auth$.error;\n\n                  if (!error) {}\n\n                  if (error) {\n                    alert(error.message);\n                  }\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        style: {\n          marginTop: 10\n        }\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","Layout","TopNav","Text","themeColor","useTheme","Section","Button","Ionicons","navigation","route","isDarkmode","setTheme","params","paramKey","nombre","white100","dark","goBack","flex","alignItems","justifyContent","supabase","auth","signOut","error","alert","message","marginTop"],"sources":["D:/anahuac/verano/mobile/myapp/MyPet/MyPetApp/src/screens/informascota.tsx"],"sourcesContent":["import React from \"react\";\nimport { View } from \"react-native\";\nimport { MainStackParamList } from \"../types/navigation\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport {\n  Layout,\n  TopNav,\n  Text,\n  themeColor,\n  useTheme,\n  Avatar,\n  Section,\n  TextInput,\n  Button,\n  SectionContent,\n} from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport default function ({\n  navigation,route,\n}: NativeStackScreenProps<MainStackParamList, \"SecondScreen\">) {\n  const { isDarkmode, setTheme } = useTheme();\n  return (\n    <Layout>\n      <TopNav\n        middleContent={route.params.paramKey.nombre}\n        leftContent={\n          <Ionicons\n            name=\"chevron-back\"\n            size={20}\n            color={isDarkmode ? themeColor.white100 : themeColor.dark}\n          />\n        }\n        leftAction={() => navigation.goBack()}\n      />\n      <View>\n\n      </View>\n      <Section>\n\n      </Section>\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {/* This text using ubuntu font */}\n        <Text fontWeight=\"bold\">: {route.params.paramKey.nombre}</Text>\n        <Button\n              status=\"danger\"\n              text=\"Logout\"\n              onPress={async () => {\n                const { error } = await supabase.auth.signOut();\n                if (!error) {\n                 // alert(\"Signed out!\");\n                }\n                if (error) {\n                  alert(error.message);\n                }\n              }}\n              style={{\n                marginTop: 10,\n              }}\n            />\n      </View>\n    </Layout>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,SACEC,MADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,QALF,EAOEC,OAPF,EASEC,MATF,QAWO,sBAXP;AAYA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,eAAe,gBAEgD;EAAA,IAD7DC,UAC6D,QAD7DA,UAC6D;EAAA,IADlDC,KACkD,QADlDA,KACkD;;EAC7D,gBAAiCL,QAAQ,EAAzC;EAAA,IAAQM,UAAR,aAAQA,UAAR;EAAA,IAAoBC,QAApB,aAAoBA,QAApB;;EACA,OACE,MAAC,MAAD;IAAA,WACE,KAAC,MAAD;MACE,aAAa,EAAEF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBC,MADvC;MAEE,WAAW,EACT,KAAC,QAAD;QACE,IAAI,EAAC,cADP;QAEE,IAAI,EAAE,EAFR;QAGE,KAAK,EAAEJ,UAAU,GAAGP,UAAU,CAACY,QAAd,GAAyBZ,UAAU,CAACa;MAHvD,EAHJ;MASE,UAAU,EAAE;QAAA,OAAMR,UAAU,CAACS,MAAX,EAAN;MAAA;IATd,EADF,EAYE,KAAC,IAAD,KAZF,EAeE,KAAC,OAAD,KAfF,EAkBE,MAAC,IAAD;MACE,KAAK,EAAE;QACLC,IAAI,EAAE,CADD;QAELC,UAAU,EAAE,QAFP;QAGLC,cAAc,EAAE;MAHX,CADT;MAAA,WAQE,MAAC,IAAD;QAAM,UAAU,EAAC,MAAjB;QAAA,iBAA2BX,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBC,MAAjD;MAAA,EARF,EASE,KAAC,MAAD;QACM,MAAM,EAAC,QADb;QAEM,IAAI,EAAC,QAFX;QAGM,OAAO,EAAE;UAAA;;UAAA;YAAA;cAAA;gBAAA;kBAAA;kBAAA,iCACiBO,QAAQ,CAACC,IAAT,CAAcC,OAAd,EADjB;;gBAAA;kBAAA;kBACCC,KADD,yBACCA,KADD;;kBAEP,IAAI,CAACA,KAAL,EAAY,CAEX;;kBACD,IAAIA,KAAJ,EAAW;oBACTC,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;kBACD;;gBAPM;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA,CAHf;QAYM,KAAK,EAAE;UACLC,SAAS,EAAE;QADN;MAZb,EATF;IAAA,EAlBF;EAAA,EADF;AA+CD"},"metadata":{},"sourceType":"module"}